services:
  frontend:
    image: thomasmiller01/kapitelshelf-frontend:0.0.0
    container_name: kapitelshelf-frontend
    restart: unless-stopped
    depends_on:
      migrator:
        condition: service_completed_successfully
    environment:
      KAPITELSHELF_API: host.docker.internal:5261
    ports:
      - "5173:5173"

  api:
    image: thomasmiller01/kapitelshelf-api:0.0.0
    container_name: kapitelshelf-api
    restart: unless-stopped
    depends_on:
      migrator:
        condition: service_completed_successfully
    environment:
      KapitelShelf__Database__Host: host.docker.internal:5432
      KapitelShelf__Database__Username: kapitelshelf
      KapitelShelf__Database__Password: kapitelshelf
    ports:
      - "5261:5261"

  migrator:
    image: thomasmiller01/kapitelshelf-migrator:0.0.0
    container_name: kapitelshelf-migrator
    restart: no
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KapitelShelf__Database__Host: host.docker.internal:5432
      KapitelShelf__Database__Username: kapitelshelf
      KapitelShelf__Database__Password: kapitelshelf

  # ----- database -----
  postgres:
    image: postgres:16.8
    container_name: postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    environment:
      POSTGRES_USER: kapitelshelf
      POSTGRES_PASSWORD: kapitelshelf
      POSTGRES_DB: kapitelshelf
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4:9.2.0
    container_name: pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: kapitelshelf@example.com
      PGADMIN_DEFAULT_PASSWORD: kapitelshelf
    volumes:
      - ./config/pgadmin4/servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
