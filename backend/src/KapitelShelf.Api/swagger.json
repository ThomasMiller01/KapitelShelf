{
  "openapi": "3.0.4",
  "info": {
    "title": "KapitelShelf.Api, Version=0.2.2.0, Culture=neutral, PublicKeyToken=null",
    "version": "1.0"
  },
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Fetch all books.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a new book.",
        "requestBody": {
          "description": "The create book dto.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              }
            }
          }
        }
      }
    },
    "/books/search": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Search books with a search term.",
        "parameters": [
          {
            "name": "searchterm",
            "in": "query",
            "description": "The search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              }
            }
          }
        }
      }
    },
    "/books/search/suggestions": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Search suggestions with a search term.",
        "parameters": [
          {
            "name": "searchterm",
            "in": "query",
            "description": "The search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/import": {
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Import a new book.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookFile": {
                    "type": "string",
                    "description": "Thebook file to import.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "bookFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResultDTO"
                }
              }
            }
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get book by the id.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "The id of the book to get.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The id of the user.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "The id of the book to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update a book.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "The id of the book to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated book.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/books/{bookId}/cover": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get the cover for a book.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "The id of the book to get the cover for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Add the cover for a book.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "The id of the book to get.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverFile": {
                    "type": "string",
                    "description": "The cover image file.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "coverFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/books/{bookId}/file": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get the file for a book.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "The id of the book to get the file for.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Add the file for a book.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "The id of the book to get.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookFile": {
                    "type": "string",
                    "description": "The book file.",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "bookFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/metadata/{source}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Fetch the metadata for a book from the specified source.",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "description": "The source from which to fetch the metadata.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MetadataSources"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title of the book to scrape metadata for.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetadataDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetadataDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetadataDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metadata/proxy-cover": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Download images server-side as a proxy for the client.",
        "parameters": [
          {
            "name": "coverUrl",
            "in": "query",
            "description": "The url of the cover to proxy.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search books with a search term.",
        "parameters": [
          {
            "name": "searchterm",
            "in": "query",
            "description": "The search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/search/suggestions": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search suggestions with a search term.",
        "parameters": [
          {
            "name": "searchterm",
            "in": "query",
            "description": "The search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/series/summary": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Fetch all series summaries.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesSummaryDTOPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesSummaryDTOPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesSummaryDTOPagedResult"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/series": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Fetch all series.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDTOPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDTOPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDTOPagedResult"
                }
              }
            }
          }
        }
      }
    },
    "/series/{seriesId}": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Get series by its id.",
        "parameters": [
          {
            "name": "seriesId",
            "in": "path",
            "description": "The id of the series to get.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Series"
        ],
        "summary": "Delete a series.",
        "parameters": [
          {
            "name": "seriesId",
            "in": "path",
            "description": "The id of the seriesto delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Series"
        ],
        "summary": "Update a series.",
        "parameters": [
          {
            "name": "seriesId",
            "in": "path",
            "description": "The id of the series to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated series.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeriesDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SeriesDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SeriesDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/series/search": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Search series with the series name.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The series name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              }
            }
          }
        }
      }
    },
    "/series/search/suggestions": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Search suggestions with the series name.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The series name.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/series/{seriesId}/merge/{targetSeriesId}": {
      "put": {
        "tags": [
          "Series"
        ],
        "summary": "Merge the series into the target series.",
        "parameters": [
          {
            "name": "seriesId",
            "in": "path",
            "description": "The source series id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "targetSeriesId",
            "in": "path",
            "description": "The target series id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/series/{seriesId}/books": {
      "get": {
        "tags": [
          "Series"
        ],
        "summary": "Get books by the series id.",
        "parameters": [
          {
            "name": "seriesId",
            "in": "path",
            "description": "The series id of the books to get.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Fetch all tasks.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a dummy task.",
        "description": "REMOVE BEFORE NEXT RELEASE!.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch all users.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user.",
        "requestBody": {
          "description": "The create user dto.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by the id.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user to get.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/{userId}/lastvisitedbooks": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the last visited books of a user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTOPagedResult"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Gets the backend version.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the author id.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "Gets or sets or set the first name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Author DTO."
      },
      "BookDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the book id.",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "description": "Gets or sets the title.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description.",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "description": "Gets or sets the release date.",
            "format": "date-time",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "description": "Gets or sets the page number.",
            "format": "int32",
            "nullable": true
          },
          "series": {
            "$ref": "#/components/schemas/SeriesDTO"
          },
          "seriesNumber": {
            "type": "integer",
            "description": "Gets or sets the series number.",
            "format": "int32"
          },
          "author": {
            "$ref": "#/components/schemas/AuthorDTO"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDTO"
            },
            "description": "Gets or sets the categories.",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDTO"
            },
            "description": "Gets or sets the tags.",
            "nullable": true
          },
          "cover": {
            "$ref": "#/components/schemas/FileInfoDTO"
          },
          "location": {
            "$ref": "#/components/schemas/LocationDTO"
          }
        },
        "additionalProperties": false,
        "description": "The book dto."
      },
      "BookDTOPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookDTO"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Gets or sets the total number of items.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The paginated result."
      },
      "CategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the category id.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The category dto."
      },
      "CreateAuthorDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Gets or sets or set the first name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets or sets the last name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The create dto for a author."
      },
      "CreateBookDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Gets or sets the title.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description.",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "description": "Gets or sets the release date.",
            "format": "date-time",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "description": "Gets or sets the page number.",
            "format": "int32",
            "nullable": true
          },
          "series": {
            "$ref": "#/components/schemas/CreateSeriesDTO"
          },
          "seriesNumber": {
            "type": "integer",
            "description": "Gets or sets the series number.",
            "format": "int32",
            "nullable": true
          },
          "author": {
            "$ref": "#/components/schemas/CreateAuthorDTO"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCategoryDTO"
            },
            "description": "Gets or sets the categories.",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTagDTO"
            },
            "description": "Gets or sets the tags.",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/CreateLocationDTO"
          }
        },
        "additionalProperties": false,
        "description": "The create dto for a book."
      },
      "CreateCategoryDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The create dto for a category."
      },
      "CreateLocationDTO": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LocationTypeDTO"
          },
          "url": {
            "type": "string",
            "description": "Gets or sets the url.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The create model for a location."
      },
      "CreateSeriesDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The create dto for a series."
      },
      "CreateTagDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The create dto for a tag."
      },
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Gets or sets the username.",
            "nullable": true
          },
          "image": {
            "$ref": "#/components/schemas/ProfileImageTypeDTO"
          },
          "color": {
            "type": "string",
            "description": "Gets or sets the profile color.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The create dto for a user."
      },
      "FileInfoDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the fileinfo id.",
            "format": "uuid"
          },
          "filePath": {
            "type": "string",
            "description": "Gets or sets the file path.",
            "nullable": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "description": "Gets or sets the file size in bytes.",
            "format": "int64"
          },
          "mimeType": {
            "type": "string",
            "description": "Gets or sets the mimetype.",
            "nullable": true
          },
          "sha256": {
            "type": "string",
            "description": "Gets or sets the sha256 checksum.",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "Gets the filename.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Gets or sets the fileinfo dto."
      },
      "ImportBookDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the book id.",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "description": "Gets or sets the book title.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The import book dto."
      },
      "ImportResultDTO": {
        "type": "object",
        "properties": {
          "isBulkImport": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether it was a bulk import."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets any errors encountered during the import process.",
            "nullable": true
          },
          "importedBooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportBookDTO"
            },
            "description": "Gets or sets the successfully imported books, containing their IDs and titles.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the result of an import operation, including details about the success or failure of the process."
      },
      "LocationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the locaiton id.",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/LocationTypeDTO"
          },
          "url": {
            "type": "string",
            "description": "Gets or sets the url.",
            "nullable": true
          },
          "fileInfo": {
            "$ref": "#/components/schemas/FileInfoDTO"
          }
        },
        "additionalProperties": false,
        "description": "The location dto."
      },
      "LocationTypeDTO": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "The location type enum.",
        "format": "int32"
      },
      "MetadataDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Gets or sets the title of the book.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the book.",
            "nullable": true
          },
          "series": {
            "type": "string",
            "description": "Gets or sets the name of the series of the book.",
            "nullable": true
          },
          "volume": {
            "type": "integer",
            "description": "Gets or sets the number of the book in the series.",
            "format": "int32",
            "nullable": true
          },
          "authors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the authors of the book.",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "description": "Gets or sets the release date of the book.",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "description": "Gets or sets the number of pages of the book.",
            "format": "int32",
            "nullable": true
          },
          "coverUrl": {
            "type": "string",
            "description": "Gets or sets the cover url of the book.",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the categories of the book.",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the tags of the book.",
            "nullable": true
          },
          "titleMatchScore": {
            "type": "integer",
            "description": "Gets or sets the score for how well the title matches the search query.",
            "format": "int32"
          },
          "completenessScore": {
            "type": "integer",
            "description": "Gets or sets the score for how complete the metadata is.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The metadata DTO class."
      },
      "MetadataSources": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "The metadata sources for book metadata scraping.",
        "format": "int32"
      },
      "ProfileImageTypeDTO": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "The profile image enum.",
        "format": "int32"
      },
      "SeriesDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the series id.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Gets or sets the creation time.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Gets or sets the update time.",
            "format": "date-time"
          },
          "lastVolume": {
            "$ref": "#/components/schemas/BookDTO"
          },
          "totalBooks": {
            "type": "integer",
            "description": "Gets or sets the total number of books.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The series dto."
      },
      "SeriesDTOPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeriesDTO"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Gets or sets the total number of items.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The paginated result."
      },
      "SeriesSummaryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the series id.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Gets or sets the creation time.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Gets or sets the update time.",
            "format": "date-time"
          },
          "lastVolume": {
            "$ref": "#/components/schemas/BookDTO"
          }
        },
        "additionalProperties": false,
        "description": "The series dto."
      },
      "SeriesSummaryDTOPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeriesSummaryDTO"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Gets or sets the total number of items.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The paginated result."
      },
      "TagDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the tag id.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The tag dto."
      },
      "TaskDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the task name.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Gets or sets the category.",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TaskState"
          },
          "isSingleExecution": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the task is a single execution or continued."
          },
          "isCronJob": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the task is a cron job."
          },
          "cronExpression": {
            "type": "string",
            "description": "Gets or sets the cron expression, if the job is a cron job.",
            "nullable": true
          },
          "lastExecution": {
            "type": "string",
            "description": "Gets or sets the time offset when the task was last executed.",
            "format": "date-time",
            "nullable": true
          },
          "nextExecution": {
            "type": "string",
            "description": "Gets or sets the time offset when the task will be next executed.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The task dto."
      },
      "TaskState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "The task state enum.",
        "format": "int32"
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the locaiton id.",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "description": "Gets or sets the user name.",
            "nullable": true
          },
          "image": {
            "$ref": "#/components/schemas/ProfileImageTypeDTO"
          },
          "color": {
            "type": "string",
            "description": "Gets or sets the profile color.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The user dto."
      }
    }
  }
}