// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace KapitelShelf.Data.Migrations.Migrations
{
    /// <inheritdoc />
    public partial class AddSearchTextToSearchView : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // enable the pg_trgm extension if not already
            migrationBuilder.Sql("CREATE EXTENSION IF NOT EXISTS pg_trgm;");

            // recreate the view with the new SearchText column
            migrationBuilder.Sql(@"
                CREATE OR REPLACE VIEW ""BookSearchView"" AS
                SELECT
                    b.""Id"",
                    b.""Title"",
                    b.""Description"",
                    s.""Name"" AS ""SeriesName"",
                    COALESCE(string_agg(DISTINCT a.""FirstName"" || ' ' || a.""LastName"", ' '), '') AS ""AuthorNames"",
                    COALESCE(string_agg(DISTINCT t.""Name"", ' '), '') AS ""TagNames"",
                    COALESCE(string_agg(DISTINCT c.""Name"", ' '), '') AS ""CategoryNames"",
                    setweight(to_tsvector('english', b.""Title""), 'A')
                      || setweight(to_tsvector('english', COALESCE(s.""Name"", '')), 'B')
                      || setweight(to_tsvector('english', COALESCE(string_agg(DISTINCT a.""FirstName"" || ' ' || a.""LastName"", ' '), '')), 'B')
                      || setweight(to_tsvector('english', COALESCE(string_agg(DISTINCT t.""Name"", ' '), '')), 'C')
                      || setweight(to_tsvector('english', COALESCE(string_agg(DISTINCT c.""Name"", ' '), '')), 'C')
                      || setweight(to_tsvector('english', b.""Description""), 'D')
                        AS ""SearchVector"",
                    -- new column: fulltext version for pg_trgm
                    b.""Title"" || ' ' ||
                    COALESCE(s.""Name"", '') || ' ' ||
                    COALESCE(string_agg(DISTINCT a.""FirstName"" || ' ' || a.""LastName"", ' '), '') || ' ' ||
                    COALESCE(string_agg(DISTINCT t.""Name"", ' '), '') || ' ' ||
                    COALESCE(string_agg(DISTINCT c.""Name"", ' '), '') || ' ' ||
                    COALESCE(b.""Description"", '') AS ""SearchText""
                FROM
                    ""Books"" b
                    LEFT JOIN ""Series"" s ON b.""SeriesId"" = s.""Id""
                    LEFT JOIN ""Authors"" a ON a.""Id"" = b.""AuthorId""
                    LEFT JOIN ""BookTags"" bt ON b.""Id"" = bt.""BookId""
                    LEFT JOIN ""Tags"" t ON t.""Id"" = bt.""TagId""
                    LEFT JOIN ""BookCategories"" bc ON b.""Id"" = bc.""BookId""
                    LEFT JOIN ""Categories"" c ON c.""Id"" = bc.""CategoryId""
                GROUP BY
                    b.""Id"", b.""Title"", b.""Description"", s.""Name"";
            ");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("DROP VIEW IF EXISTS \"BookSearchView\";");
        }
    }
}
