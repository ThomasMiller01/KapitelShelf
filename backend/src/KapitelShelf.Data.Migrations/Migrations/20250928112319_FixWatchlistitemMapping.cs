// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace KapitelShelf.Data.Migrations.Migrations
{
    /// <inheritdoc />
    public partial class FixWatchlistitemMapping : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_SeriesWatchlistItems_SeriesWatchlist_SeriesWatchlistModelSe~",
                table: "SeriesWatchlistItems");

            migrationBuilder.DropIndex(
                name: "IX_SeriesWatchlistItems_SeriesWatchlistModelSeriesId_SeriesWat~",
                table: "SeriesWatchlistItems");

            migrationBuilder.DropColumn(
                name: "SeriesWatchlistModelSeriesId",
                table: "SeriesWatchlistItems");

            migrationBuilder.DropColumn(
                name: "SeriesWatchlistModelUserId",
                table: "SeriesWatchlistItems");

            migrationBuilder.CreateTable(
                name: "SeriesWatchlistItemModelSeriesWatchlistModel",
                columns: table => new
                {
                    ItemsSeriesId = table.Column<Guid>(type: "uuid", nullable: false),
                    ItemsVolume = table.Column<int>(type: "integer", nullable: false),
                    WatchlistsSeriesId = table.Column<Guid>(type: "uuid", nullable: false),
                    WatchlistsUserId = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SeriesWatchlistItemModelSeriesWatchlistModel", x => new { x.ItemsSeriesId, x.ItemsVolume, x.WatchlistsSeriesId, x.WatchlistsUserId });
                    table.ForeignKey(
                        name: "FK_SeriesWatchlistItemModelSeriesWatchlistModel_SeriesWatchlis~",
                        columns: x => new { x.ItemsSeriesId, x.ItemsVolume },
                        principalTable: "SeriesWatchlistItems",
                        principalColumns: new[] { "SeriesId", "Volume" },
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_SeriesWatchlistItemModelSeriesWatchlistModel_SeriesWatchli~1",
                        columns: x => new { x.WatchlistsSeriesId, x.WatchlistsUserId },
                        principalTable: "SeriesWatchlist",
                        principalColumns: new[] { "SeriesId", "UserId" },
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_SeriesWatchlistItemModelSeriesWatchlistModel_WatchlistsSeri~",
                table: "SeriesWatchlistItemModelSeriesWatchlistModel",
                columns: new[] { "WatchlistsSeriesId", "WatchlistsUserId" });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "SeriesWatchlistItemModelSeriesWatchlistModel");

            migrationBuilder.AddColumn<Guid>(
                name: "SeriesWatchlistModelSeriesId",
                table: "SeriesWatchlistItems",
                type: "uuid",
                nullable: true);

            migrationBuilder.AddColumn<Guid>(
                name: "SeriesWatchlistModelUserId",
                table: "SeriesWatchlistItems",
                type: "uuid",
                nullable: true);

            migrationBuilder.CreateIndex(
                name: "IX_SeriesWatchlistItems_SeriesWatchlistModelSeriesId_SeriesWat~",
                table: "SeriesWatchlistItems",
                columns: new[] { "SeriesWatchlistModelSeriesId", "SeriesWatchlistModelUserId" });

            migrationBuilder.AddForeignKey(
                name: "FK_SeriesWatchlistItems_SeriesWatchlist_SeriesWatchlistModelSe~",
                table: "SeriesWatchlistItems",
                columns: new[] { "SeriesWatchlistModelSeriesId", "SeriesWatchlistModelUserId" },
                principalTable: "SeriesWatchlist",
                principalColumns: new[] { "SeriesId", "UserId" },
                onDelete: ReferentialAction.Cascade);
        }
    }
}
