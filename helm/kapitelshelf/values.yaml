global:
  deployPostgres: true

frontend:  
  image:
    # -- Frontend image repository
    repository: thomasmiller01/kapitelshelf-frontend
    # -- Frontend image tag
    tag: "0.1.0"
    # -- Frontend [imagePullPolicy](https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images)
    pullPolicy: IfNotPresent

  service:
    # -- Frontend port
    port: 5173

  resources:        
    limits:
      # -- Sets the frontend container cpu limit
      cpu: 500m
      # -- Sets the frontend container memory limit
      memory: 512Mi
      
    requests:
      # -- Sets the frontend container cpu request
      cpu: 250m
      # -- Sets the frontend container memory request
      memory: 256Mi

api:
  image:
    # -- Api image repository
    repository: thomasmiller01/kapitelshelf-api
    # -- Api image tag
    tag: "0.1.0"
    # -- Api [imagePullPolicy](https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images)
    pullPolicy: IfNotPresent

  service:
    # -- Api port
    port: 5261

  resources:        
    limits:
      # -- Sets the api container cpu limit
      cpu: 500m
      # -- Sets the api container memory limit
      memory: 512Mi
      
    requests:
      # -- Sets the api container cpu request
      cpu: 250m
      # -- Sets the api container memory request
      memory: 256Mi

migrator:
  image:
    # -- Migrator image repository
    repository: thomasmiller01/kapitelshelf-migrator
    # -- Migrator image tag
    tag: "0.1.0"
    # -- Migrator [imagePullPolicy](https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images)
    pullPolicy: IfNotPresent

  resources:
    limits:
      # -- Sets the migrator container cpu limit
      cpu: 500m
      # -- Sets the migrator container memory limit
      memory: 512Mi
      
    requests:
      # -- Sets the migrator container cpu request
      cpu: 250m
      # -- Sets the migrator container memory request
      memory: 256Mi

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx

  hosts:
    - host: kapitelshelf.example.com
      paths:
        - path: /api
          service: api
          port: 5261
        - path: /
          service: frontend
          port: 5173
  tls: []

postgresql:
  # host: "mypostgres.example"
  auth:
    username: "kapitelshelf"
    password: "kapitelshelf"

    database: kapitelshelf

  primary:
    service:
      port: 5432

    persistence:
      size: 50Gi

    updateStrategy:
      type: RollingUpdate

    resources:
      limits:
        # -- Sets the postgresql container memory request
        memory: 2Gi

  readReplicas:
    replicaCount: 0

  metrics:
    enabled: false