apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kapitelshelf.name" . }}-api
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "kapitelshelf.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: api
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: api
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: api
          image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
          env:
            - name: KapitelShelf__Database__Host
              value: {{ include "postgresql.host" . }}
            - name: KapitelShelf__Database__Username
              value: {{ .Values.postgresql.auth.username }}
            - name: KapitelShelf__Database__Password
              value: {{ .Values.postgresql.auth.password }}
          volumeMounts:
            - mountPath: /var/lib/kapitelshelf/data
              name: data
          resources: {{ toYaml .Values.api.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: {{ .Values.api.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: {{ .Values.api.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/startup
              port: {{ .Values.api.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 30
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "kapitelshelf.name" . }}-data
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "kapitelshelf.name" . }}-api
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "kapitelshelf.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.api.service.port }}
      targetPort: {{ .Values.api.service.port }}
      protocol: TCP
      name: http
  selector:
    component: api
    release: {{ .Release.Name }}
---
{{- if .Values.api.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "kapitelshelf.name" . }}-api
  namespace: {{ .Values.global.namespace }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    {{- include "kapitelshelf.annotations" .Values.api.ingress.annotations | nindent 4 }}
spec:
  ingressClassName: {{ .Values.api.ingress.className }}
  rules:
    - host: {{ .Values.api.ingress.host }}
      http:
        paths:
          - path: {{ .Values.api.ingress.path }}(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ include "kapitelshelf.name" . }}-api
                port:
                  number: {{ .Values.api.service.port }}
  {{- if .Values.api.ingress.tls }}
  tls:
    {{- toYaml .Values.api.ingress.tls | nindent 4 }}
  {{- end }}
{{- end }}
